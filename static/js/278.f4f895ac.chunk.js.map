{"version":3,"file":"static/js/278.f4f895ac.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","servises/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { MoviesAPI } from 'servises/moviesAPI';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const searchText = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchText === null || '') return;\n\n    async function fetchMovies() {\n      const data = await MoviesAPI.fetchMoviesSearch(searchText);\n      setMovies(data.results);\n    }\n\n    fetchMovies();\n  }, [searchText]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.search.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(({ title, name, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","const KEY = '5e90f5ae4966eeebc5d8d32f49164d73';\nconst keyParam = `api_key=${KEY}`;\nconst defaultURL = 'https://api.themoviedb.org/3/';\n\nexport const MoviesAPI = {\n  async fetchMoviesTrending() {\n    const response = await fetch(`${defaultURL}trending/all/day?${keyParam}`);\n    return (await response.json()).results;\n  },\n\n  async fetchMovieById(id) {\n    const response = await fetch(`${defaultURL}movie/${id}?${keyParam}`);\n    return await response.json();\n  },\n\n  async fetchMoviesSearch(text = false) {\n    const response = await fetch(\n      `${defaultURL}search/movie?${keyParam}&language=en-US&page=1&include_adult=false&query=${text}`\n    );\n    return await response.json();\n  },\n\n  async fetchMovieDetails(id) {\n    const response = await fetch(\n      `${defaultURL}movie/${id}/credits?${keyParam}`\n    );\n    return await response.json();\n  },\n\n  async fetchMovieCredits(id) {\n    const response = await fetch(\n      `${defaultURL}movie/${id}/credits?${keyParam}`\n    );\n    return await response.json();\n  },\n\n  async fetchMovieReviews(id) {\n    const response = await fetch(\n      `${defaultURL}movie/${id}/reviews?${keyParam}`\n    );\n    return await response.json();\n  },\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Movies","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","searchText","get","location","useLocation","useEffect","MoviesAPI","data","results","fetchMovies","onSubmit","e","preventDefault","form","currentTarget","query","elements","search","value","reset","type","name","map","title","id","to","state","from","keyParam","defaultURL","fetchMoviesTrending","fetch","response","json","fetchMovieById","fetchMoviesSearch","text","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}