{"version":3,"file":"static/js/561.eee44a57.chunk.js","mappings":"wOAGe,SAASA,IACtB,IAAMC,ECAD,WACL,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOD,EAAP,KAAgBE,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,kBAA4BH,GAASI,KAAKL,EAC3C,GAAE,CAACC,IACGH,CACR,CDPiBQ,GAChB,OACER,IACE,+BACE,eAAIS,UAAU,YAAd,SACGT,EAAQU,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OAChB,gBAAaN,UAAU,YAAvB,WACE,gBACEO,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLK,MAAM,SAER,4BACE,mCACQ,6BAAKL,SAEb,uCACY,6BAAKC,aAXZF,EADO,OAqB3B,C,qFE7BKO,EAAQ,kBADF,oCAENC,EAAa,gCAENd,EAAY,CACjBe,oBADiB,WACM,OAAD,qHACHC,MAAM,GAAD,OAAIF,EAAJ,4BAAkCD,IADpC,cACpBI,EADoB,gBAEZA,EAASC,OAFG,uCAEKC,SAFL,4CAG3B,EAEKC,eANiB,SAMFd,GAAK,OAAD,qHACAU,MAAM,GAAD,OAAIF,EAAJ,iBAAuBR,EAAvB,YAA6BO,IADlC,cACjBI,EADiB,gBAEVA,EAASC,OAFC,oFAGxB,EAEKG,kBAXiB,WAWgB,IAAD,iIAAdC,EAAc,yCACbN,MAAM,GAAD,OACvBF,EADuB,wBACGD,EADH,4DAC+DS,IAFvD,cAC9BL,EAD8B,gBAIvBA,EAASC,OAJc,oFAKrC,EAEKK,kBAlBiB,SAkBCjB,GAAK,OAAD,qHACHU,MAAM,GAAD,OACvBF,EADuB,iBACJR,EADI,oBACUO,IAFZ,cACpBI,EADoB,gBAIbA,EAASC,OAJI,oFAK3B,EAEKM,kBAzBiB,SAyBClB,GAAK,OAAD,qHACHU,MAAM,GAAD,OACvBF,EADuB,iBACJR,EADI,oBACUO,IAFZ,cACpBI,EADoB,gBAIbA,EAASC,OAJI,oFAK3B,EAEKO,kBAhCiB,SAgCCnB,GAAK,OAAD,qHACHU,MAAM,GAAD,OACvBF,EADuB,iBACJR,EADI,oBACUO,IAFZ,cACpBI,EADoB,gBAIbA,EAASC,OAJI,oFAK3B,E,sBCzCH,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOlC,KAAK6B,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/Cast/Cast.jsx","hooks/useFetchCredits.js","servises/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useFetchCredits } from 'hooks/useFetchCredits';\nimport './Cast.css';\n\nexport default function Cast() {\n  const credits = useFetchCredits();\n  return (\n    credits && (\n      <>\n        <ul className=\"cast-list\">\n          {credits.cast.map(({ id, name, character, profile_path }) => (\n            <li key={id} className=\"cast-item\">\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                width=\"100\"\n              />\n              <div>\n                <p>\n                  Actor:<b> {name}</b>\n                </p>\n                <p>\n                  Character:<b> {character}</b>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    )\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MoviesAPI } from 'servises/moviesAPI';\n\nexport function useFetchCredits() {\n  const [credits, setCredits] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    MoviesAPI.fetchMovieCredits(movieId).then(setCredits);\n  }, [movieId]);\n  return credits;\n}\n","const KEY = '5e90f5ae4966eeebc5d8d32f49164d73';\nconst keyParam = `api_key=${KEY}`;\nconst defaultURL = 'https://api.themoviedb.org/3/';\n\nexport const MoviesAPI = {\n  async fetchMoviesTrending() {\n    const response = await fetch(`${defaultURL}trending/all/day?${keyParam}`);\n    return (await response.json()).results;\n  },\n\n  async fetchMovieById(id) {\n    const response = await fetch(`${defaultURL}movie/${id}?${keyParam}`);\n    return await response.json();\n  },\n\n  async fetchMoviesSearch(text = false) {\n    const response = await fetch(\n      `${defaultURL}search/movie?${keyParam}&language=en-US&page=1&include_adult=false&query=${text}`\n    );\n    return await response.json();\n  },\n\n  async fetchMovieDetails(id) {\n    const response = await fetch(\n      `${defaultURL}movie/${id}/credits?${keyParam}`\n    );\n    return await response.json();\n  },\n\n  async fetchMovieCredits(id) {\n    const response = await fetch(\n      `${defaultURL}movie/${id}/credits?${keyParam}`\n    );\n    return await response.json();\n  },\n\n  async fetchMovieReviews(id) {\n    const response = await fetch(\n      `${defaultURL}movie/${id}/reviews?${keyParam}`\n    );\n    return await response.json();\n  },\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Cast","credits","useState","setCredits","movieId","useParams","useEffect","MoviesAPI","then","useFetchCredits","className","cast","map","id","name","character","profile_path","src","alt","width","keyParam","defaultURL","fetchMoviesTrending","fetch","response","json","results","fetchMovieById","fetchMoviesSearch","text","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}